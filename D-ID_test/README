# D-ID Flask 虛擬人物即時對話應用

這是一個使用 Python (Flask) 作為後端、HTML/CSS/JavaScript 作為前端，並整合 D-ID Streams API 實現與虛擬人物進行即時對話的網頁應用程式。

## 功能特性

* 透過 WebRTC 與 D-ID 生成的虛擬人物進行即時視頻串流。
* 用戶可以輸入文字，虛擬人物會以語音和口型動畫即時回應。
* 簡單的網頁介面，包含視頻顯示區域、文字輸入框和控制按鈕。

## 先備條件

在開始之前，請確保你已安裝並準備好以下項目：

1.  **Python**: 版本 3.8 或更高。
2.  **pip**: Python 的套件安裝器 (通常隨 Python 一起安裝)。
3.  **Git**: 用於克隆此儲存庫。
4.  **D-ID 帳戶與 API 金鑰**:
    * 你需要在 [D-ID 官方網站](https://www.d-id.com/) 註冊帳戶。
    * 獲取你的 API 金鑰 (格式通常是 `Basic YOUR_BASE64_ENCODED_API_KEY_WITH_COLON`)。
5.  **D-ID Agent ID**: 你需要在 D-ID Studio 中創建一個 Agent，並獲取其 Agent ID (例如 `agt_...`)。
6.  **D-ID Agent 的 Presenter Source URL**: 這是你的 Agent 使用的頭像圖片 URL。你可以從 Agent 的詳細資訊中找到 (通常是 `presenter.source_url`)。

## 安裝與設定步驟

1.  **克隆儲存庫**:
    打開你的終端機或 Git Bash，並克隆此儲存庫到你的本地電腦：
    ```bash
    git clone [https://github.com/b09901017/250510-helpingG2-D-ID.git](https://github.com/b09901017/250510-helpingG2-D-ID.git)
    ```

2.  **進入專案目錄**:
    ```bash
    cd 250510-helpingG2-D-ID
    ```

3.  **創建並啟動 Python 虛擬環境** (推薦)：
    * 創建虛擬環境 (例如命名為 `venv`):
        ```bash
        python -m venv venv
        ```
    * 啟動虛擬環境:
        * Windows (Git Bash 或 cmd):
            ```bash
            venv\Scripts\activate
            ```
        * macOS / Linux:
            ```bash
            source venv/bin/activate
            ```
    之後，你的終端機提示符前應該會出現 `(venv)`。

4.  **安裝必要的 Python 套件**:
    專案根目錄下應包含一個 `requirements.txt` 文件。如果沒有，你可以手動創建它，內容如下：
    ```
    Flask
    requests
    ```
    然後運行以下命令安裝：
    ```bash
    pip install -r requirements.txt
    ```
    *(如果你是專案的原始開發者，並且已經在虛擬環境中安裝了 `Flask` 和 `requests`，你可以運行 `pip freeze > requirements.txt` 來自動生成此文件。)*

5.  **設定環境變數**:
    此應用程式需要以下環境變數來運行。你需要在你的作業系統中設定這些環境變數。
    * `DID_API_KEY`: 你的 D-ID API 金鑰 (包含 `Basic ` 前綴和 Base64 編碼後的金鑰)。
        * 例如 (Linux/macOS): `export DID_API_KEY="Basic xxxxxxxxxxxxxxxxxxxxxxxx"`
        * 例如 (Windows cmd): `set DID_API_KEY="Basic xxxxxxxxxxxxxxxxxxxxxxxx"`
        * 例如 (Windows PowerShell): `$env:DID_API_KEY="Basic xxxxxxxxxxxxxxxxxxxxxxxx"`
    * `AGENT_ID`: 你的 D-ID Agent ID。
        * 例如: `export AGENT_ID="agt_yourAgentIdGoesHere"`
    * `AGENT_SOURCE_URL`: 你的 D-ID Agent 使用的頭像圖片 URL。
        * 例如: `export AGENT_SOURCE_URL="https://your.avatar.image/url.png"`

    **或者 (更推薦的做法，修改 `app.py`)**:
    為了更方便管理這些配置，建議修改 `app.py` 文件，使其從環境變數讀取所有這些值。打開 `app.py` 並找到以下幾行：
    ```python
    DID_API_KEY = os.environ.get("DID_API_KEY", "你的D-ID API金鑰")
    AGENT_ID = "agt_xcI1Cwqn" # 你的 Agent ID
    AGENT_SOURCE_URL = "[https://create-images-results.d-id.com/](https://create-images-results.d-id.com/)..." # 你的 Agent 頭像 URL
    ```
    將它們修改為：
    ```python
    import os

    DID_API_KEY = os.environ.get("DID_API_KEY")
    AGENT_ID = os.environ.get("AGENT_ID")
    AGENT_SOURCE_URL = os.environ.get("AGENT_SOURCE_URL")

    if not DID_API_KEY:
        print("錯誤：環境變數 DID_API_KEY 未設置。")
        exit()
    if not AGENT_ID:
        print("錯誤：環境變數 AGENT_ID 未設置。")
        exit()
    if not AGENT_SOURCE_URL:
        print("錯誤：環境變數 AGENT_SOURCE_URL 未設置。")
        exit()
    ```
    這樣修改後，你就必須設定上面提到的三個環境變數 (`DID_API_KEY`, `AGENT_ID`, `AGENT_SOURCE_URL`) 才能運行應用。

6.  **`.gitignore` 文件**:
    此專案已包含一個 `.gitignore` 文件，用於排除不必要的檔案（如虛擬環境、Python 編譯檔案）被提交到 Git。請確保 `.env` (如果你在本地使用它來存放環境變數) 或其他包含敏感資訊的檔案也被列在 `.gitignore` 中，以避免意外上傳。

## 運行應用程式

1.  確保你的虛擬環境已啟動，並且所有環境變數已正確設定。
2.  在專案的根目錄下，運行 Flask 應用程式：
    ```bash
    python app.py
    ```
3.  成功啟動後，你應該會在終端機看到類似以下的訊息：
    ```
     * Running on [http://127.0.0.1:5000/](http://127.0.0.1:5000/) (Press CTRL+C to quit)
    ```
4.  打開你的網頁瀏覽器，並前往 `http://127.0.0.1:5000/`。

## 如何使用

1.  打開網頁後，首先點擊 **"連接 Agent"** 按鈕。等待狀態訊息提示 WebRTC 連接成功。
2.  連接成功後，點擊 **"創建聊天"** 按鈕。
3.  之後，你就可以在下方的輸入框中輸入文字，然後點擊 **"發送"** 按鈕與虛擬人物對話。
4.  如果視頻是靜音的 (為了自動播放)，點擊頁面上出現的 **"取消靜音 / Unmute"** 按鈕來聽到聲音。

## 文件結構 (簡要)